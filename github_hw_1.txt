1. Создайте текстовый файл как в первом ДЗ по Terminal.
2. Сценарий перенесите в этот файл.
3. На против каждого действия - напишите команду в GitBash

JSON
4. Создать внешний репозиторий c названием JSON.

5. Клонировать репозиторий JSON на локальный компьютер. - 
git clone https://github.com/VladimirAG38/JSON.git.

6. Внутри локального JSON создать файл “new.json”. - 
vim new.json.

7. Добавить файл под гит. - 
git add new.json.

8. Закоммитить файл. - 
git commit -m "create new.json".

9. Отправить файл на внешний GitHub репозиторий. - 
git push.

10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON. - 
vim new.json
{
	"Name":"Guzaev Vladimir Alexandrovich",
	"Age":"39",
	"Pets":"2",
	"Salary":"100000"
}

11. Отправить изменения на внешний репозиторий. -  
git commit -am "corectly new.json"
git push

12. Создать файл preferences.json - 
vim preferences.json

13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON. - 
{
	"Movie":"Ivan Vasilevich menyaet professiyu",
	"Serial":"Scrubs",
	"Food":"Meat",
	"Season":"Fall",
	"Country":"China"
}

14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON - 
vim skills.json
{
	"skill1":"Базовая теория (Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования и т.п.) SDLC, STLC",
	"skill2":"Что такое клиент-серверная архитектура",
	"skill3":"HTTP Методы запросов на сервер",
	"skill4":"Коды ответов HTTP сервера",
	"skill5":"Структуры HTTP запросов и ответов",
	"skill6":"Что такое JSON, XML. Их структура",
	"skill7":"Тестирование API через Postman (JS, автотесты API)",
	"skill8":"Снятие и чтение логов c внешнего сервера",
	"skill9":"Снифинг http web трафика через Charles и Fiddler",
	"skill10":"Dev Tools веб браузеров (Google Chrome, FireFox)",
	"skill11":"VPN. (Как работает, зачем нужен, как использовать, варианты инструментов",
	"skill12":"Мобильное тестирование",
	"skill13":"Особенность iOS, Android, гайдлайны",
	"skill14":"Сборка iOS приложений на XCode. (У кого нет Mac компьютера, просто посмотрят)",
	"skill15":"Сборка Android приложений на Android Studio",
	"skill16":"ADB (управление андройд девайсами)",
	"skill17":"Настройка прокси и vpn на iOS и Android",
	"skill18":"Перехват (сниффинг) мобильного трафика через Charles и Fiddler на iOS и Android",
	"skill19":"Командная строка (terminal) Linux (копирование, создание, просмотр, перемещение файлов на серверах без графического интерфейса)",
	"skill20":"Основы bash скриптинг, автоматизация рутинных задач на сервере",
	"skill21":"Доступ к удалённым серверам",	
	"skill22":"Основы SQL (Create, Delete, Drop, Insert Into, Select, From, Where, Join)",
	"skill23":"База данных Postgres (установка, настройка и использование)",
	"skill24":"Нереляционная база данных Redis (установка, настройка и использование)",
	"skill25":"Нагрузочное тестирование в Jmeter",
	"skill26":"Методология разработки Scrum",
	"skill27":"Python. (Изучение основ. Создание клиент серверного приложения)"
}

15. Отправить сразу 2 файла на внешний репозиторий. - 
git add .
git commit -m "create preferences.json & skills.json"
git push

16. На веб интерфейсе создать файл bug_report.json.

17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON.

19. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

20. Синхронизировать внешний и локальный репозиторий JSON
git pull

XML
1. Создать внешний репозиторий c названием XML.

2. Клонировать репозиторий XML на локальный компьютер.
git clone https://github.com/VladimirAG38/XML.git

3. Внутри локального XML создать файл “new.xml”.
vim new.xml

4. Добавить файл под гит.
git add new.xml

5. Закоммитить файл.
git commit -m "create new.xml"

6. Отправить файл на внешний GitHub репозиторий.
git push

7. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
vim new.xml
<xml>

<name>"Guzaev Vladimir Alexandrovich"</name>
<age>"39"</age>
<pets>"2"</pets>
<salary>"100000"</salary>

8. Отправить изменения на внешний репозиторий.
git commit -am "update new.xml"
git push

9. Создать файл preferences.xml
vim preferences.xml

10. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML.
<xml>
<movie>"Ivan Vasilevich menyaet professiyu"</movie>
<serial>"Scrubs"</serial>
<food>"Meat"</food>
<season>"Fall"</season>
<country>"China"</country>

11. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML
<xml>
<skll1>"Базовая теория (Что такое тестирование, багрепорты, документация, виды, методы, направления тестирования и т.п.) SDLC, STLC."</skll1>
<skll2>"Что такое клиент-серверная архитектура."</skll2>
<skll3>"HTTP Методы запросов на сервер."</skll3>
<skll4>"Коды ответов HTTP сервера."</skll4>
<skll5>"Структуры HTTP запросов и ответов."</skll5>
<skll6>"Что такое JSON, XML. Их структура."</skll6>
<skll7>"Тестирование API через Postman (JS, автотесты API)."</skll7>
<skll8>"Снятие и чтение логов c внешнего сервера."</skll8>
<skll9>"Снифинг http web трафика через Charles и Fiddler."</skll9>
<skll10>"Dev Tools веб браузеров (Google Chrome, FireFox)"</skll10>
<skll11>"VPN. (Как работает, зачем нужен, как использовать, варианты инструментов)"</skll11>
<skll12>"Мобильное тестирование."</skll12>
<skll13>"Особенность iOS, Android, гайдлайны."</skll13>
<skll14>"Сборка iOS приложений на XCode. (У кого нет Mac компьютера, просто посмотрят)"</skll14	>
<skll15>"Сборка Android приложений на Android Studio."</skll15>
<skll16>"ADB (управление андройд девайсами)."</skll16>
<skll17>"Настройка прокси и vpn на iOS и Android."</skll17>
<skll18>"Перехват (сниффинг) мобильного трафика через Charles и Fiddler на iOS и Android."</skll18>
<skll19>"Командная строка (terminal) Linux (копирование, создание, просмотр, перемещение файлов на серверах без графического интерфейса)"</skll19>
<skll20>"Основы bash скриптинг, автоматизация рутинных задач на сервере."</skll20>
<skll21>"Доступ к удалённым серверам."	</skll21>
<skll22>"Основы SQL (Create, Delete, Drop, Insert Into, Select, From, Where, Join)."</skll22>
<skll23>"База данных Postgres (установка, настройка и использование)."</skll23>
<skll24>"Нереляционная база данных Redis (установка, настройка и использование)."</skll24>
<skll25>"Нагрузочное тестирование в Jmeter."</skll25>
<skll26>"Методология разработки Scrum."	</skll26>
<skll27>"Python. (Изучение основ. Создание клиент серверного приложения)"</skll27>

12. Сделать коммит в одну строку.
git add .
git commit -m "create preferences.xml & sklls.xml"

13. Отправить сразу 2 файла на внешний репозиторий.
git push

14. На веб интерфейсе создать файл bug_report.xml.

15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

16. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML.

17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.

18. Синхронизировать внешний и локальный репозиторий XML
git pull

TXT
1. Создать внешний репозиторий c названием TXT.
2. Клонировать репозиторий TXT на локальный компьютер.
3. Внутри локального TXT создать файл “new.txt”.
4. Добавить файл под гит.
5. Закоммитить файл.
6. Отправить файл на внешний GitHub репозиторий.
7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT.
8. Отправить изменения на внешний репозиторий.
9. Создать файл preferences.txt
10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT.
11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT
12. Сделать коммит в одну строку.
13. Отправить сразу 2 файла на внешний репозиторий.
14. На веб интерфейсе создать файл bug_report.txt.
15. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT.
17. Сделать Commit changes (сохранить) изменения на веб интерфейсе.
18. Синхронизировать внешний и локальный репозиторий TXT
